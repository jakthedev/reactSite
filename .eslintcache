[{"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"14","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16"},{"size":698,"mtime":1612617957697,"results":"17","hashOfConfig":"18"},{"size":571,"mtime":1613340319952,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611546442993,"results":"20","hashOfConfig":"18"},{"size":1641,"mtime":1612796360645,"results":"21","hashOfConfig":"18"},{"size":1209,"mtime":1612741141281,"results":"22","hashOfConfig":"18"},{"size":2169,"mtime":1612803174115,"results":"23","hashOfConfig":"18"},{"size":2487,"mtime":1613339952516,"results":"24","hashOfConfig":"18"},{"size":5326,"mtime":1613191886982,"results":"25","hashOfConfig":"18"},{"size":1918,"mtime":1612804796006,"results":"26","hashOfConfig":"18"},{"size":1010,"mtime":1612801497524,"results":"27","hashOfConfig":"18"},{"size":8587,"mtime":1613102296078,"results":"28","hashOfConfig":"18"},{"size":4081,"mtime":1612740717407,"results":"29","hashOfConfig":"18"},{"size":295,"mtime":1612740903952,"results":"30","hashOfConfig":"18"},{"size":1025,"mtime":1612740853806,"results":"31","hashOfConfig":"18"},{"size":4114,"mtime":1612821860690,"results":"32","hashOfConfig":"18"},{"size":246,"mtime":1613341183609,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"btf5dk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["69","70"],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["71","72"],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["73","74","75","76"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport FormFeedback from 'reactstrap/lib/FormFeedback';\n\nclass Contact extends Component { \n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '', \n            lastName: '',\n            phoneNum: '', \n            email: '', \n            agree: false, \n            contactType: 'By Phone', \n            feedback: '', \n            touched: { \n                firstName: false, \n                lastName: false, \n                phoneNum: false, \n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    validate(firstName, lastName, phoneNum, email) {\n\n        const errors = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: ''\n        };\n\n        if (this.state.touched.firstName) {\n            if (firstName.length < 2) {\n                errors.firstName = 'First name must be at least 2 characters.';\n            } else if (firstName.length > 15) {\n                errors.firstName = 'First name must be 15 or less characters.';\n            }\n        }\n\n        if (this.state.touched.lastName) {\n            if (lastName.length < 2) {\n                errors.lastName = 'Last name must be at least 2 characters.';\n            } else if (lastName.length > 15) {\n                errors.lastName = 'Last name must be 15 or less characters.';\n            }\n        }\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.phoneNum && !reg.test(phoneNum)) {\n            errors.phoneNum = 'The phone number should contain only numbers.';\n        }\n\n        if (this.state.touched.email && !email.includes('@')) {\n            errors.email = 'Email should contain a @';\n        }\n\n        return errors;\n    }\n\n    handleBlur = (field) => () => {\n        this.setState({\n            touched: {...this.state.touched, [field]: true}\n        });\n    }\n\n    handleInputChange(event) {\n        const target = event.target; \n        const name = target.name; \n        const value = target.type ==='checkbox' ? target.checked : target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        console.log('Current state is: ' + JSON.stringify(this.state));\n        alert('Current state is: ' + JSON.stringify(this.state));\n        event.preventDefault();\n    }\n\n    render() {\n\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup row>\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        value={this.state.firstName}\n                                        invalid={errors.firstName}\n                                        onBlur={this.handleBlur(\"firstName\")}\n                                        onChange={this.handleInputChange} /> \n                                        <FormFeedback>{errors.firstName}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Input type=\"text\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        value={this.state.lastName}\n                                        invalid={errors.lastName}\n                                        onBlur={this.handleBlur(\"lastName\")}\n                                        onChange={this.handleInputChange} />\n                                        <FormFeedback>{errors.lastName}</FormFeedback>\n                                </Col>                        \n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Input type=\"tel\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        value={this.state.phoneNum} \n                                        invalid={errors.phoneNum}\n                                        onBlur={this.handleBlur(\"phoneNum\")}\n                                        onChange={this.handleInputChange} />\n                                        <FormFeedback>{errors.phoneNum}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email} \n                                        invalid={errors.email}\n                                        onBlur={this.handleBlur(\"email\")}\n                                        onChange={this.handleInputChange} /> \n                                        <FormFeedback>{errors.email}</FormFeedback>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 4, offset: 2}}>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input type=\"checkbox\"\n                                                name=\"agree\"\n                                                checked={this.state.agree}\n                                                onChange={this.handleInputChange} /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </FormGroup>\n                                </Col>\n                                <Col md={4}>\n                                    <Input type=\"select\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            onChange={this.handleInputChange}>\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Input type=\"textarea\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        value={this.state.feedback}\n                                        onChange={this.handleInputChange}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Contact;","/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/jd/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":20},{"ruleId":"83","severity":1,"message":"87","line":2,"column":22,"nodeType":"85","messageId":"86","endLine":2,"endColumn":36},{"ruleId":"83","severity":1,"message":"88","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"89","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'BreadcrumbItem' is defined but never used.","'Link' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]